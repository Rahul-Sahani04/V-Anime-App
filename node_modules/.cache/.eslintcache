[{"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/index.js":"1","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/reportWebVitals.js":"2","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/App.js":"3","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/components/Navbar.js":"4","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/components/card.js":"5","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Recom.js":"6","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Search.js":"7","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Pop_anime.js":"8","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Top_anime.js":"9","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Movie.js":"10","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Home.js":"11","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/components/Navbar_2.js":"12","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/components/toggleTheme.js":"13","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/RandomImage.js":"14","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/WatchAnime.js":"15"},{"size":1096,"mtime":1677767427502,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1675866275403,"results":"18","hashOfConfig":"19"},{"size":1146,"mtime":1677771077862,"results":"20","hashOfConfig":"17"},{"size":1070,"mtime":1676648709215,"results":"21","hashOfConfig":"17"},{"size":1438,"mtime":1677841335652,"results":"22","hashOfConfig":"17"},{"size":1423,"mtime":1677061722256,"results":"23","hashOfConfig":"17"},{"size":3358,"mtime":1677841362161,"results":"24","hashOfConfig":"17"},{"size":152,"mtime":1676125866442,"results":"25","hashOfConfig":"17"},{"size":136,"mtime":1676125861513,"results":"26","hashOfConfig":"17"},{"size":172,"mtime":1676127596304,"results":"27","hashOfConfig":"17"},{"size":1913,"mtime":1676889221876,"results":"28","hashOfConfig":"17"},{"size":1256,"mtime":1677739976289,"results":"29","hashOfConfig":"17"},{"size":533,"mtime":1676832306834,"results":"30","hashOfConfig":"17"},{"size":1358,"mtime":1677132521500,"results":"31","hashOfConfig":"17"},{"size":5265,"mtime":1677856471965,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"1oybfgh",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"8170sp",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/index.js",["92","93","94"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport App from './App';\nimport Home from './pages/Home';\nimport Movie from './pages/Movie';\nimport Pop_anime from './pages/Pop_anime';\nimport Top_anime from './pages/Top_anime';\nimport Search from './pages/Search';\nimport Watch from './pages/WatchAnime';\n\nimport {\n  createBrowserRouter,\n  RouterProvider,\n } from \"react-router-dom\";\nimport Random_image from './pages/RandomImage';\n\n\nconst router = createBrowserRouter([\n  {\n   path: \"/\",\n   element: <App />,\n  },\n  {\n   path: \"/home\",\n   element: <Home />,\n  },\n  {\n   path: \"/search\",\n   element: <Search />,\n  },\n  {\n   path: \"/movie\",\n   element: <Movie />,\n  },\n  {\n   path: \"/popular\",\n   element: <Pop_anime />,\n  },\n  {\n   path: \"/top_anime\",\n   element: <Top_anime />,\n  },\n  {\n   path: \"/watch\",\n   element: <Watch />,\n  },\n  {\n   path: \"/watch/:id\",\n   element: <Watch />,\n  },\n  {\n   path: \"/random_img\",\n   element: <Random_image />,\n  },\n ]);\n  \n ReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <RouterProvider router={router} />\n );","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/reportWebVitals.js",[],[],[],"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/App.js",["95","96"],[],"import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './main.css';\nimport './components/card.css';\nimport MY_Navbar from './components/Navbar_2'\nfunction App() {\n  const [Query_A, setQueryA] = useState('');\n\n  return (\n    <div className='app'>\n\n      <div className=\"content-image\">\n        <div className=\"header-links\">\n          <Link className=\"header-items\" to=\"/home\">Home</Link>\n          <Link className=\"header-items\" to=\"/movie\">Movie</Link>\n          <Link className=\"header-items\" to=\"/popular\">Popular</Link>\n          <Link className=\"header-items\" to=\"/top_anime\">Top Anime</Link>\n        </div>\n        <div className='search1-box content-wrap'>\n\n          <input className='search-box' value={Query_A} type={\"text\"} onChange={e => setQueryA(e.target.value)} />\n          <Link className=\"header-items\" to={{\n        pathname: \"/search\",\n        search: `?query=${Query_A}`,\n        state: { fromHome: true }\n      }}>\n            <input className='button-27' value={\"Search\"} type={\"Button\"} />\n          </Link>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",[],"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/components/Navbar.js",[],[],"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/components/card.js",["97"],[],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './card.css'\nconst Card = ({ title, id, description, image, href_q, theme_mode }) => {\n  return (\n    <div className=\"card-container\">\n      <div className=\"wrapper\">\n        {/* <div class=\"banner-image\" style={{backgroundImage:{image}}}> </div> */}\n        <img src={image} className=\"banner-image\" />\n        <h4 className='title'>{title}</h4>\n        {/* <p>Lorem ipsum dolor sit amet, <br />\n          consectetur adipiscing elit.</p> */}\n      </div>\n      <div className=\"button-wrapper\">\n        <button className=\"btn outline\">DETAILS</button>\n        <Link to={{\n\n          pathname: '/watch',\n          search: `?query=${id}&ep=episode-1`\n          }}\n           className={'main-card'}>\n          <button className=\"btn fill\">Watch Now</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n\n\n\n\n  // <a href={\"\" + href_q} target=\"_blank\" rel=\"noopener noreferrer\" className='a-nodec'>\n\n  //   <div className={`${theme_mode}`}>\n  //     <div className={`card `}>\n  //       <div className='img-cover'>\n  //         <div className='overlay'>\n  //           <p className='syp'>{description}</p>\n  //         </div>\n  //         <img src={image} alt={title} />\n  //       </div>\n  //       <div className=\"desc\">\n  //         <h2>{title}</h2>\n  //         {/* <hr></hr> */}\n  //       </div>\n  //     </div>\n  //   </div>\n  // </a>","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Recom.js",["98"],[],"import React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport Card_Component from '../components/card';\nconst ItemPerPage = 5;\nfunction Recom(props) {\n  const [recomList, setRecomList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  // console.log(recomList);\n  const fetchRecom = async (query) => {\n    const response = await fetch(`https://api.jikan.moe/v4/recommendations/anime?page=1`);\n    const data = await response.json();\n    const totalPages = data.pagination.last_visible_page;\n    // console.log(data.data);\n    setRecomList(data.data);\n    setTotalPages(totalPages);\n    console.log(`TOTAL PAGE: ${totalPages}`);\n  };\n  \n  useEffect(() => {\n    fetchRecom();\n  }, []);\n\n  return (\n    <div onScroll={() => {\n        if (page < totalPages) {\n          setPage(page + 1);\n        }\n    }}>\n      {recomList.slice(0, page * ItemPerPage).map((item, index) => (\n        <div className='container' key={\"D-ID\" + index}>\n          {/* <Recom/> */}\n\n          {\n            recomList?.map((recom, index) => (\n              <Card_Component theme_mode={props.theme} className={'anime-card'} title={recom.entry[0].title} image={recom.entry[0].images.jpg.large_image_url} description={recom.content} href={recom.entry[0].url} key={\"ID\" + index} />\n            )\n            )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Recom;","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Search.js",["99","100","101","102","103","104","105","106","107","108","109","110"],[],"import React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport Card_Component from '../components/card';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport ThemeToggleButton from '../components/toggleTheme';\nimport { Link, useLocation } from 'react-router-dom';\nconst ItemPerPage = 5;\n\nconst Search = ({ query_y }) => {\n    const [Query, setQuery] = useState(\"One Piece\");\n    let temp = \"\";\n    const [page, setPage] = useState(1);\n    const [animeList, setAnimeList] = useState([]);\n    const [totalPages, setTotalPages] = useState(1);\n    const [Totalitems, setTotalItems] = useState(1);\n\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    const handleThemeToggle = () => {\n        setIsDarkMode(!isDarkMode);\n    };\n\n\n    const location = useLocation();\n    const fetchLocation = async () => {\n        const temp = location.search.split(\"=\");\n        setQuery(temp[1]);\n        if (location.state?.fromHome == true) {\n            setQuery(location.search.split(\"=\"));\n            console.log(\"QQQ \" + Query);\n        }\n        const fromHome = location.state?.fromHome;\n        console.log(fromHome);\n\n    }\n\n    const fetchAnime = async (query, page) => {\n        let formattedQuery = query.replace(/\\s+/g, \"%20\").toLowerCase(); \n        console.log(formattedQuery); // \"attack-on-titan\"\n        const response = await fetch(`https://api.consumet.org/anime/gogoanime/${formattedQuery}?page=${page}`);\n        const data = await response.json();\n        console.log(data);\n        setAnimeList(data.results);\n        setQuery(temp);\n        const Query = \"\";\n        setQuery(Query);\n    };\n\n    useEffect(() => {\n        console.log(\"Welcome to Search \" + location.search);\n        if (location.search != undefined || location.search != null) {\n            temp = location.search.split(\"=\")[1];\n            fetchAnime(temp, page);\n        }\n        else {\n            fetchAnime(Query, page);\n        }\n    }, []);\n    return (\n        <div className={`app`}>\n            <div className={isDarkMode ? 'app light-theme' : 'app dark-theme'}>\n                <MY_Navbar2 />\n                <div className='toggle'>\n                    <ThemeToggleButton isDarkMode={isDarkMode} onToggle={handleThemeToggle} />\n                </div>\n                <div className='search1-box content-wrap'>\n\n                    <input className='search-box' value={Query} type={\"text\"} onChange={e => setQuery(e.target.value)} />\n                    <Link to={{\n                        pathname: '/search',\n                        search: `?query=${Query}`\n                    }} >\n                        <input className='button-27' value={\"Search\"} type={\"Button\"} onClick={() => fetchAnime(Query, 1)} />\n                    </Link>\n\n                </div>\n                <div className='container' key={\"D-ID\"}>\n                    {\n                        animeList?.map((anime, index) => (\n                            // <Link to={`/watch/${anime.id}-episode-1`} className={'main-card'}>\n                                <Card_Component className={'anime-card'} title={anime.title} id={anime.id} description={\"\"} image={anime.image} key={index} />\n                            // </Link>\n                        )\n                        )}\n                </div>\n\n            </div>\n        </div >\n    )\n\n}\nexport default Search;","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Pop_anime.js",[],[],[],"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Top_anime.js",[],[],"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Movie.js",[],[],"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Home.js",["111","112","113","114"],[],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../main.css';\nimport ThemeToggleButton from '../components/toggleTheme';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport Recom from './Recom';\nimport Search from './Search';\n\nfunction Home() {\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    const handleThemeToggle = () => {\n        setIsDarkMode(!isDarkMode);\n    };\n    const [Query_A, setQueryA] = useState('');\n\n    const [showComponentA, setShowComponentA] = useState(true);\n\n    const fromHome = true;\n    const handleQueryChange = (event) => {\n        setQueryA(event.target.value);\n    };\n\n    const onClickMe = () => {\n        setShowComponentA(!showComponentA);\n    };\n\n    return (\n        <div className={`app`}>\n            <div className={isDarkMode ? 'app light-theme' : 'app dark-theme'}>\n                <MY_Navbar2 theme={isDarkMode ? 'light-theme' : 'dark-theme'}/>\n                <div className='toggle'>\n                    <ThemeToggleButton isDarkMode={isDarkMode} onToggle={handleThemeToggle} />\n                </div>\n\n                <br />\n                <div className='search1-box content-wrap'>\n\n                    <input className='search-box' value={Query_A} type={\"text\"} onChange={handleQueryChange} />\n                    <Link to={{\n                        pathname: '/search',\n                        search: `?query=${Query_A}`,\n                        state: { fromHome: true }\n                    }}>\n                        <input className='button-27' value={\"Search\"} type={\"Button\"} onClick={() => onClickMe()} />\n                    </Link>\n\n                </div>\n                <Recom />\n                {/* {showComponentA ? <Recom key={129} /> : <Search query_y={Query_A} showComponentA={showComponentA} key={169} />} */}\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/components/Navbar_2.js",["115"],[],"import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport \"./Navbar.css\";\n\nfunction MY_Navbar2(props) {\n  const theme  = props.theme;\n  return (\n    <div className={`content`}>\n    <div className={`header-links `}>\n      <Link className={`header-items` } to=\"/home\">Home</Link>\n      <Link className={`header-items` } to=\"/movie\">Movie</Link>\n      <Link className={`header-items` } to=\"/popular\">Popular</Link>\n      <Link className={`header-items` } to=\"/top_anime\">Top Anime</Link>\n      <Link className=\"header-items\" to=\"/watch\">Watch Here</Link>\n      <Link className=\"header-items\" to=\"/random_img\">Random Image</Link>\n    </div>\n    </div>\n  );\n}\nexport default MY_Navbar2;\n\n\n\n\n\n\n\n// import React from 'react';\n// import './Navbar.css';\n\n// const Navbar = () => {\n//   return (\n//     <nav>\n//       <ul>\n//         <li>\n//           <a href=\"#\">Home</a>\n//         </li>\n//         <li>\n//           <a href=\"#\">Movies</a>\n//         </li>\n//         <li>\n//           <a href=\"#\">TV Series</a>\n//         </li>\n//         <li>\n//           <a href=\"#\">Most Popular</a>\n//         </li>\n//         <li>\n//           <a href=\"#\">Top Airing</a>\n//         </li>\n//       </ul>\n//     </nav>\n//   );\n// };\n\n// export default Navbar;\n","/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/components/toggleTheme.js",[],[],[],"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/RandomImage.js",["116","117","118"],[],"import React, { useState, useEffect } from 'react';\n\nfunction Random_image() {\n    const list = [\"waifu\", \"neko\", \"shinobu\", \"megumin\", \"bully\", \"cuddle\", \"cry\",\n        \"hug\", \"awoo\", \"kiss\", \"lick\", \"pat\", \"smug\", \"bonk\", \"yeet\", \"blush\", \"smile\",\n        \"wave\", \"highfive\", \"handhold\", \"nom\", \"bite\", \"glomp\", \"slap\", \"kill\", \"kick\",\n        \"happy\", \"wink\", \"poke\", \"dance\", \"cringe\"]\n\n    const [ImageUrl, SetImageUrl] = useState(\"\");\n    let imgarray = [];\n\n    const fetchImage = async () => {\n        for (let index = 0; index < 2; index++) {\n            const response = await fetch(`https://api.waifu.pics/sfw/waifu`);\n            const data = await response.json();\n            console.log(data.url);\n            SetImageUrl(data.url);\n            imgarray[index] = data.url;\n            console.log(`Url: ${ImageUrl} `);\n        }\n        console.log(`Array: ${imgarray} `);\n    };\n\n    useEffect(() => {\n       fetchImage();\n    }, []);\n    return (\n        <div className='app'>\n            <input value={\"Click Me\"} type={'button'} onClick={() => fetchImage()}/>\n            {\n                imgarray?.map((anime_img, index) => (\n                    <div>\n                        <img src={anime_img} key={index} width=\"300px\"/>\n                    </div>\n            )    )\n            }\n        </div>\n    )\n}\n\nexport default Random_image;",[],"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/WatchAnime.js",["119","120","121","122","123","124","125"],[],"import React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport ThemeToggleButton from '../components/toggleTheme';\nimport './WatchAnime.css';\nimport { Link, useLocation } from 'react-router-dom';\n\n\nfunction Watch() {\n    const location = useLocation()\n\n    const [Query, setQuery] = useState(\"Naruto\");\n    const [animeList, setAnimeList] = useState({});\n    const [WatchUrl, setWatchUrl] = useState(\"\");\n\n    const [TotalEP, setTotalEP] = useState(1);\n    const [EP, setEP] = useState(1);\n\n    const [isDarkMode, setIsDarkMode] = useState(false);\n    const [dataLoaded, setDataLoaded] = useState(false);\n\n    const [page, setPage] = useState(1);\n    const episodesPerPage = 50;\n    const startIndex = (page - 1) * episodesPerPage;\n    const endIndex = startIndex + episodesPerPage;\n\n    const handlePrevPage = () => {\n        if (page > 1) {\n            setPage(page - 1);\n        }\n    };\n\n    const handleNextPage = () => {\n        const numPages = Math.ceil(animeList.episodes.length / episodesPerPage);\n        if (page < numPages) {\n            setPage(page + 1);\n        }\n    };\n\n\n    const handleThemeToggle = () => {\n        setIsDarkMode(!isDarkMode);\n    };\n\n    function handleChange(que) {\n        setQuery(que);\n    }\n\n    const handleLinkClick = (episodeId) => {\n        fetchAnime(episodeId);\n    };\n\n\n    const fetchEpisodes = async (query) => {\n        const response = await fetch(`https://api.consumet.org/anime/gogoanime/info/${query}`)\n        const data = await response.json();\n        const animeList = data;\n        setAnimeList(animeList);\n        const TotalEP = await animeList.totalEpisodes;\n        setTotalEP(TotalEP);\n        console.log(animeList);\n        console.log(\"TITLE: \" + animeList.title);\n        console.log(\"Total Ep: \" + TotalEP);\n        console.log(\"Episode : \" + animeList.episodes[0].id);\n        setEP(animeList.episodes[0].id)\n    };\n\n    const fetchAnime = async (Que, Epi_No) => {\n        let syntext = Que + \"-\" + Epi_No;\n        console.log(\"TEXT\" + syntext);\n        if (Epi_No) {\n            const servers = await fetch(`https://api.consumet.org/anime/gogoanime/servers/${syntext}`)\n            const server_data = await servers.json();\n            console.log(\"servers: \");\n            console.log(server_data);\n            const WatchUrl = server_data[2].url;\n            setWatchUrl(WatchUrl);\n            // setDataLoaded(true);\n        } else {\n            const response = await fetch(`https://api.consumet.org/anime/gogoanime/servers/${Que}`)\n            const server_data = await response.json();\n            const WatchUrl = server_data[2].url;\n            setWatchUrl(WatchUrl);\n            console.log(WatchUrl);\n        }\n        setDataLoaded(true);\n    };\n\n\n\n\n    // const formattedQuery = Query.replace(/\\s+/g, \"-\").toLowerCase(); \n    // console.log(formattedQuery); // \"attack-on-titan\"\n\n\n    useEffect(() => {\n        const Query = new URLSearchParams(location.search).get(\"query\");\n        const EP = new URLSearchParams(location.search).get(\"ep\");\n\n        setQuery(Query);\n        setEP(EP);\n\n        fetchEpisodes(Query);\n        if (EP) {\n            console.log(\"C EP: \" + EP);\n            fetchAnime(Query, EP);\n        }\n        console.log(animeList);\n    }, []);\n\n    if (!dataLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className={`app`}>\n                <h1> {animeList.title}</h1>\n                <input type={\"text\"} onChange={e => handleChange(e.target.value)} />\n                <input type={\"submit\"} onClick={() => fetchEpisodes(Query)} />\n                <div className='pagination'>\n                    <button onClick={handlePrevPage}>Prev</button>\n                    \n                    <span>\n                        Page {page} of {animeList.episodes ? Math.ceil(animeList.episodes.length / episodesPerPage) : 0}\n                    </span>\n\n                    <button onClick={handleNextPage}>Next</button>\n                </div>\n                <div className='main-content'>\n                    <div className='content' >\n\n                        {animeList.episodes && animeList.episodes.slice(startIndex, endIndex).map((episode, index) => (\n                            <div className='episode' key={index} >\n                                <Link\n                                    className='link'\n                                    // to={`/watch/${episode.id}`}\n                                    to={{\n\n                                        pathname: '/watch',\n                                        search: `?ep=${episode.id}`\n                                    }}\n                                    onClick={() => handleLinkClick(episode.id)}\n                                >\n                                    {episode.id.split(\"-\").pop()}\n                                </Link>\n                            </div>\n                        ))}\n\n\n                    </div>\n                    <div className='video'>\n                        <iframe src={WatchUrl} width={\"1080px\"} height={\"600px\"}></iframe>\n                    </div>\n                </div>\n\n\n            </div >\n        );\n    }\n}\n\nexport default Watch;\n",{"ruleId":"126","severity":1,"message":"127","line":38,"column":13,"nodeType":"128","messageId":"129","endLine":38,"endColumn":26},{"ruleId":"126","severity":1,"message":"130","line":42,"column":13,"nodeType":"128","messageId":"129","endLine":42,"endColumn":26},{"ruleId":"126","severity":1,"message":"131","line":54,"column":13,"nodeType":"128","messageId":"129","endLine":54,"endColumn":29},{"ruleId":"132","severity":1,"message":"133","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"136","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":9,"column":9,"nodeType":"128","endLine":9,"endColumn":53},{"ruleId":"126","severity":1,"message":"139","line":37,"column":15,"nodeType":"128","messageId":"129","endLine":37,"endColumn":235},{"ruleId":"132","severity":1,"message":"140","line":7,"column":7,"nodeType":"134","messageId":"135","endLine":7,"endColumn":18},{"ruleId":"132","severity":1,"message":"141","line":12,"column":18,"nodeType":"134","messageId":"135","endLine":12,"endColumn":25},{"ruleId":"132","severity":1,"message":"142","line":14,"column":12,"nodeType":"134","messageId":"135","endLine":14,"endColumn":22},{"ruleId":"132","severity":1,"message":"143","line":14,"column":24,"nodeType":"134","messageId":"135","endLine":14,"endColumn":37},{"ruleId":"132","severity":1,"message":"144","line":15,"column":12,"nodeType":"134","messageId":"135","endLine":15,"endColumn":22},{"ruleId":"132","severity":1,"message":"145","line":15,"column":24,"nodeType":"134","messageId":"135","endLine":15,"endColumn":37},{"ruleId":"132","severity":1,"message":"146","line":25,"column":11,"nodeType":"134","messageId":"135","endLine":25,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":28,"column":38,"nodeType":"149","messageId":"150","endLine":28,"endColumn":40},{"ruleId":"147","severity":1,"message":"151","line":51,"column":29,"nodeType":"149","messageId":"150","endLine":51,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":52,"column":20,"nodeType":"154","endLine":52,"endColumn":49},{"ruleId":"126","severity":1,"message":"155","line":62,"column":17,"nodeType":"128","messageId":"129","endLine":62,"endColumn":31},{"ruleId":"126","severity":1,"message":"139","line":81,"column":33,"nodeType":"128","messageId":"129","endLine":81,"endColumn":159},{"ruleId":"132","severity":1,"message":"133","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"156","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":14},{"ruleId":"132","severity":1,"message":"157","line":19,"column":11,"nodeType":"134","messageId":"135","endLine":19,"endColumn":19},{"ruleId":"126","severity":1,"message":"155","line":31,"column":17,"nodeType":"128","messageId":"129","endLine":31,"endColumn":80},{"ruleId":"132","severity":1,"message":"158","line":6,"column":9,"nodeType":"134","messageId":"135","endLine":6,"endColumn":14},{"ruleId":"132","severity":1,"message":"159","line":4,"column":11,"nodeType":"134","messageId":"135","endLine":4,"endColumn":15},{"ruleId":"152","severity":1,"message":"160","line":26,"column":8,"nodeType":"161","endLine":26,"endColumn":10,"suggestions":"162"},{"ruleId":"137","severity":1,"message":"138","line":33,"column":25,"nodeType":"128","endLine":33,"endColumn":73},{"ruleId":"132","severity":1,"message":"163","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":18},{"ruleId":"132","severity":1,"message":"164","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":25},{"ruleId":"132","severity":1,"message":"165","line":16,"column":12,"nodeType":"134","messageId":"135","endLine":16,"endColumn":19},{"ruleId":"132","severity":1,"message":"166","line":17,"column":12,"nodeType":"134","messageId":"135","endLine":17,"endColumn":14},{"ruleId":"132","severity":1,"message":"167","line":41,"column":11,"nodeType":"134","messageId":"135","endLine":41,"endColumn":28},{"ruleId":"152","severity":1,"message":"168","line":109,"column":8,"nodeType":"161","endLine":109,"endColumn":10,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":151,"column":25,"nodeType":"128","endLine":151,"endColumn":82},"react/jsx-pascal-case","Imported JSX component Pop_anime must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Top_anime must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Random_image must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'MY_Navbar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Imported JSX component Card_Component must be in PascalCase or SCREAMING_SNAKE_CASE","'ItemPerPage' is assigned a value but never used.","'setPage' is assigned a value but never used.","'totalPages' is assigned a value but never used.","'setTotalPages' is assigned a value but never used.","'Totalitems' is assigned a value but never used.","'setTotalItems' is assigned a value but never used.","'fetchLocation' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","Assignments to the 'temp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Imported JSX component MY_Navbar2 must be in PascalCase or SCREAMING_SNAKE_CASE","'Search' is defined but never used.","'fromHome' is assigned a value but never used.","'theme' is assigned a value but never used.","'list' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchImage'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'MY_Navbar2' is defined but never used.","'ThemeToggleButton' is defined but never used.","'TotalEP' is assigned a value but never used.","'EP' is assigned a value but never used.","'handleThemeToggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'animeList' and 'location.search'. Either include them or remove the dependency array.",["173"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [fetchImage]",{"range":"178","text":"179"},"Update the dependencies array to be: [animeList, location.search]",{"range":"180","text":"181"},[946,948],"[fetchImage]",[3313,3315],"[animeList, location.search]"]