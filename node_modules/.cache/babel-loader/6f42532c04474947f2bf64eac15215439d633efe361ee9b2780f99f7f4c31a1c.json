{"ast":null,"code":"var _jsxFileName = \"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/WatchAnime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport ThemeToggleButton from '../components/toggleTheme';\nimport './WatchAnime.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemPerPage = 25;\nfunction Watch() {\n  _s();\n  const location = useLocation();\n  const [Query, setQuery] = useState(\"Naruto\");\n  const [animeList, setAnimeList] = useState({});\n  const [WatchUrl, setWatchUrl] = useState(\"\");\n  const [TotalEP, setTotalEP] = useState(1);\n  const [EP, setEP] = useState(1);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const handleThemeToggle = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  function handleChange(que) {\n    setQuery(que);\n  }\n  const handleLinkClick = episodeId => {\n    fetchAnime(episodeId);\n  };\n  const fetchEpisodes = async query => {\n    const response = await fetch(`https://gogoanime.consumet.stream/anime-details/${query}`);\n    const data = await response.json();\n    const animeList = data;\n    setAnimeList(animeList);\n    const TotalEP = await animeList.totalEpisodes;\n    setTotalEP(TotalEP);\n    console.log(animeList);\n    console.log(\"TITLE: \" + animeList.animeTitle);\n    console.log(\"Total Ep: \" + TotalEP);\n    console.log(\"Episode : \" + animeList.episodesList[0].episodeId);\n    setDataLoaded(true);\n  };\n  const fetchAnime = async Epi_No => {\n    const response = await fetch(`https://api.consumet.org/anime/gogoanime/watch/${Query + \"-\" + Epi_No}`);\n    const data = await response.json();\n    const WatchUrl = data.Referer;\n    setWatchUrl(WatchUrl);\n    console.log(WatchUrl);\n    setDataLoaded(true);\n  };\n  useEffect(() => {\n    const Query = location.search.split(\"=\")[1];\n    setQuery(Query);\n    const EP = location.search.split(\"=\")[2];\n    setEP(EP);\n    // const formattedQuery = Query.replace(/\\s+/g, \"-\").toLowerCase(); \n    // console.log(formattedQuery); // \"attack-on-titan\"\n    console.log(location.search.split(\"=\"));\n    console.log(`Query = ${Query}  . ... . .  Ep = ${EP}`);\n    fetchEpisodes(Query);\n    if (EP) {\n      console.log(EP);\n      fetchAnime(EP);\n    }\n  }, []);\n  if (!dataLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", animeList.animeTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => handleChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => fetchEpisodes(Query)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: animeList.episodesList.slice(0).reverse().map((episode, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"episode\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"link\",\n              to: `/watch/${episode.episodeId}`,\n              onClick: () => handleLinkClick(episode.episodeId),\n              children: episode.episodeId.split(\"-\")[2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: WatchUrl,\n            width: \"1080px\",\n            height: \"600px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Watch, \"/83cgJVjnpMYR1m6OzIidHTMVmk=\", false, function () {\n  return [useLocation];\n});\n_c = Watch;\nexport default Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","useState","useEffect","MY_Navbar2","ThemeToggleButton","Link","useLocation","ItemPerPage","Watch","location","Query","setQuery","animeList","setAnimeList","WatchUrl","setWatchUrl","TotalEP","setTotalEP","EP","setEP","isDarkMode","setIsDarkMode","dataLoaded","setDataLoaded","handleThemeToggle","handleChange","que","handleLinkClick","episodeId","fetchAnime","fetchEpisodes","query","response","fetch","data","json","totalEpisodes","console","log","animeTitle","episodesList","Epi_No","Referer","search","split","e","target","value","slice","reverse","map","episode","index"],"sources":["/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/WatchAnime.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport ThemeToggleButton from '../components/toggleTheme';\nimport './WatchAnime.css';\nimport { Link, useLocation} from 'react-router-dom';\n\nconst ItemPerPage = 25;\n\nfunction Watch() {\n    const location = useLocation()\n\n    const [Query, setQuery] = useState(\"Naruto\");\n    const [animeList, setAnimeList] = useState({});\n    const [WatchUrl, setWatchUrl] = useState(\"\");\n\n    const [TotalEP, setTotalEP] = useState(1);\n    const [EP, setEP] = useState(1);\n\n    const [isDarkMode, setIsDarkMode] = useState(false);\n    const [dataLoaded, setDataLoaded] = useState(false);\n\n    const handleThemeToggle = () => {\n        setIsDarkMode(!isDarkMode);\n    };\n\n    function handleChange(que) {\n        setQuery(que);\n    }\n\n    const handleLinkClick = (episodeId) => {\n        fetchAnime(episodeId);\n    };\n\n\n    const fetchEpisodes = async (query) => {\n        const response = await fetch(`https://gogoanime.consumet.stream/anime-details/${query}`)\n        const data = await response.json();\n        const animeList = data;\n        setAnimeList(animeList);\n        const TotalEP = await animeList.totalEpisodes;\n        setTotalEP(TotalEP);\n        console.log(animeList);\n        console.log(\"TITLE: \" + animeList.animeTitle);\n        console.log(\"Total Ep: \" + TotalEP);\n        console.log(\"Episode : \" + animeList.episodesList[0].episodeId);\n        setDataLoaded(true);\n    };\n    const fetchAnime = async (Epi_No) => {\n        const response = await fetch(`https://api.consumet.org/anime/gogoanime/watch/${Query + \"-\" + Epi_No}`)\n        const data = await response.json();\n        const WatchUrl = data.Referer;\n        setWatchUrl(WatchUrl);\n        console.log(WatchUrl);\n\n        setDataLoaded(true);\n    };\n\n    useEffect(() => {\n        const Query = location.search.split(\"=\")[1];\n        setQuery(Query);\n        const EP = location.search.split(\"=\")[2];\n        setEP(EP);\n        // const formattedQuery = Query.replace(/\\s+/g, \"-\").toLowerCase(); \n        // console.log(formattedQuery); // \"attack-on-titan\"\n        console.log(location.search.split(\"=\"));\n        console.log(`Query = ${Query}  . ... . .  Ep = ${EP}`);\n        fetchEpisodes(Query);\n        if (EP) {\n            console.log(EP);\n            fetchAnime(EP);\n        }\n    }, []);\n\n    if (!dataLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className={`app`}>\n                <h1> {animeList.animeTitle}</h1>\n                <input type={\"text\"} onChange={e => handleChange(e.target.value)} />\n                <input type={\"submit\"} onClick={() => fetchEpisodes(Query)} />\n                <div className='main-content'>\n\n                    <div className='content' >\n                        {animeList.episodesList.slice(0).reverse().map((episode, index) => (\n                            <div className='episode' key={index} >\n                                <Link\n                                    className='link'\n                                    to={`/watch/${episode.episodeId}`}\n                                    onClick={() => handleLinkClick(episode.episodeId)}\n                                >\n                                    {episode.episodeId.split(\"-\")[2]}\n                                </Link>\n                            </div>\n                        ))}\n                    </div>\n                    <div className='video'>\n                        <iframe src={WatchUrl} width={\"1080px\"} height={\"600px\"}></iframe>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Watch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}