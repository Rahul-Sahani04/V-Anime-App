{"ast":null,"code":"var _jsxFileName = \"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport Card_Component from '../components/card';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport ThemeToggleButton from '../components/toggleTheme';\nimport { Link, useLocation } from 'react-router-dom';\nimport Wavy from '../components/wavy_loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    query_y\n  } = _ref;\n  const [Query, setQuery] = useState(\"One Piece\");\n  let temp = \"\";\n  const [page, setPage] = useState(1);\n  const [animeList, setAnimeList] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [Totalitems, setTotalItems] = useState(1);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const handleThemeToggle = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  const location = useLocation();\n  const fetchLocation = async () => {\n    var _location$state, _location$state2;\n    const temp = location.search.split(\"=\");\n    setQuery(temp[1]);\n    if (((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.fromHome) == true) {\n      setQuery(location.search.split(\"=\"));\n      console.log(\"QQQ \" + Query);\n    }\n    const fromHome = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.fromHome;\n    console.log(fromHome);\n  };\n  const fetchAnime = async (query, page) => {\n    let formattedQuery = query.replace(/\\s+/g, \"%20\").toLowerCase();\n    console.log(formattedQuery); // \"attack-on-titan\"\n    const response = await fetch(`https://api.consumet.org/anime/gogoanime/${formattedQuery}?page=${page}`);\n    const data = await response.json();\n    // console.log(data);\n    setAnimeList(data.results);\n    setQuery(temp);\n    const Query = query.replace(/\\s+/g, \"%20\").toLowerCase();\n    setQuery(Query);\n  };\n  useEffect(() => {\n    console.log(\"Welcome to Search \" + location.search);\n    if (location.search != undefined || location.search != null) {\n      temp = location.search.split(\"=\")[1];\n      fetchAnime(temp, page);\n    } else {\n      fetchAnime(Query, page);\n    }\n  }, []);\n  if (!dataLoaded) {\n    return /*#__PURE__*/_jsxDEV(Wavy, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isDarkMode ? 'app light-theme' : 'app dark-theme',\n        children: [/*#__PURE__*/_jsxDEV(MY_Navbar2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle\",\n          children: /*#__PURE__*/_jsxDEV(ThemeToggleButton, {\n            isDarkMode: isDarkMode,\n            onToggle: handleThemeToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search1-box content-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"search-box\",\n            value: Query,\n            type: \"text\",\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: '/search',\n              search: `?query=${Query}`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"button-27\",\n              value: \"Search\",\n              type: \"Button\",\n              onClick: () => fetchAnime(Query, 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: animeList === null || animeList === void 0 ? void 0 : animeList.map((anime, index) =>\n          /*#__PURE__*/\n          // <Link to={`/watch/${anime.id}-episode-1`} className={'main-card'}>\n          _jsxDEV(Card_Component, {\n            className: 'anime-card',\n            title: anime.title,\n            id: anime.id,\n            description: \"\",\n            image: anime.image\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)\n          // </Link>\n          )\n        }, \"D-ID\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(Search, \"2rsQyDYePXgLDsvh87ebZT3jC58=\", false, function () {\n  return [useLocation];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","Card_Component","MY_Navbar2","ThemeToggleButton","Link","useLocation","Wavy","Search","query_y","Query","setQuery","temp","page","setPage","animeList","setAnimeList","totalPages","setTotalPages","Totalitems","setTotalItems","dataLoaded","setDataLoaded","isDarkMode","setIsDarkMode","handleThemeToggle","location","fetchLocation","search","split","state","fromHome","console","log","fetchAnime","query","formattedQuery","replace","toLowerCase","response","fetch","data","json","results","undefined","e","target","value","pathname","map","anime","index","title","id","image"],"sources":["/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport Card_Component from '../components/card';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport ThemeToggleButton from '../components/toggleTheme';\nimport { Link, useLocation } from 'react-router-dom';\nimport Wavy from '../components/wavy_loader';\n\nconst Search = ({ query_y }) => {\n    const [Query, setQuery] = useState(\"One Piece\");\n    let temp = \"\";\n    const [page, setPage] = useState(1);\n    const [animeList, setAnimeList] = useState([]);\n    const [totalPages, setTotalPages] = useState(1);\n    const [Totalitems, setTotalItems] = useState(1);\n\n    const [dataLoaded, setDataLoaded] = useState(false);\n\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    const handleThemeToggle = () => {\n        setIsDarkMode(!isDarkMode);\n    };\n\n\n    const location = useLocation();\n    const fetchLocation = async () => {\n        const temp = location.search.split(\"=\");\n        setQuery(temp[1]);\n        if (location.state?.fromHome == true) {\n            setQuery(location.search.split(\"=\"));\n            console.log(\"QQQ \" + Query);\n        }\n        const fromHome = location.state?.fromHome;\n        console.log(fromHome);\n\n    }\n\n    const fetchAnime = async (query, page) => {\n        let formattedQuery = query.replace(/\\s+/g, \"%20\").toLowerCase();\n        console.log(formattedQuery); // \"attack-on-titan\"\n        const response = await fetch(`https://api.consumet.org/anime/gogoanime/${formattedQuery}?page=${page}`);\n        const data = await response.json();\n        // console.log(data);\n        setAnimeList(data.results);\n        setQuery(temp);\n        const Query = query.replace(/\\s+/g, \"%20\").toLowerCase();\n        setQuery(Query);\n    };\n\n    useEffect(() => {\n        console.log(\"Welcome to Search \" + location.search);\n        if (location.search != undefined || location.search != null) {\n            temp = location.search.split(\"=\")[1];\n            fetchAnime(temp, page);\n        }\n        else {\n            fetchAnime(Query, page);\n        }\n    }, []);\n\n\n    if (!dataLoaded) {\n        return <Wavy />\n    }\n    else {\n\n        return (\n            <div className={`app`}>\n                <div className={isDarkMode ? 'app light-theme' : 'app dark-theme'}>\n                    <MY_Navbar2 />\n                    <div className='toggle'>\n                        <ThemeToggleButton isDarkMode={isDarkMode} onToggle={handleThemeToggle} />\n                    </div>\n                    <div className='search1-box content-wrap'>\n\n                        <input className='search-box' value={Query} type={\"text\"} onChange={e => setQuery(e.target.value)} />\n                        <Link to={{\n                            pathname: '/search',\n                            search: `?query=${Query}`\n                        }} >\n                            <input className='button-27' value={\"Search\"} type={\"Button\"} onClick={() => fetchAnime(Query, 1)} />\n                        </Link>\n\n                    </div>\n                    <div className='container' key={\"D-ID\"}>\n                        {\n                            animeList?.map((anime, index) => (\n                                // <Link to={`/watch/${anime.id}-episode-1`} className={'main-card'}>\n                                <Card_Component className={'anime-card'} title={anime.title} id={anime.id} description={\"\"} image={anime.image} key={index} />\n                                // </Link>\n                            )\n                            )}\n                    </div>\n\n                </div>\n            </div >\n        )\n\n    }\n}\nexport default Search;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}