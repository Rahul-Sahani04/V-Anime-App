{"ast":null,"code":"var _jsxFileName = \"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport Card_Component from '../components/card';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemPerPage = 5;\nconst Search = _ref => {\n  _s();\n  let {\n    query_y\n  } = _ref;\n  const location = useLocation();\n  const [Query, setQuery] = useState(query_y);\n  const [page, setPage] = useState(1);\n  const [animeList, setAnimeList] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [Totalitems, setTotalItems] = useState(1);\n  if (location.state == true) {\n    setQuery(location.search.slice(0, 7));\n  }\n  const fetchAnime = async (query, page) => {\n    const response = await fetch(`https://api.jikan.moe/v4/anime?q=\"${query}\"&page=${page}&order_by=title&sort=asc`);\n    const data = await response.json();\n    const totalPages = data.pagination.last_visible_page;\n    const Totalitems = data.pagination.items.count;\n    console.log(data.data);\n    setAnimeList(data.data);\n    setTotalPages(totalPages);\n    setTotalItems(Totalitems);\n    console.log(`TOTAL PAGE: ${totalPages} & ITems: ${Totalitems}`);\n  };\n  useEffect(() => {\n    fetchAnime(Query, page);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(MY_Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onScroll: () => {\n        if (page < totalPages) {\n          setPage(page + 1);\n        }\n      },\n      children: animeList.slice(0, page * ItemPerPage).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: animeList === null || animeList === void 0 ? void 0 : animeList.map((anime, index) => /*#__PURE__*/_jsxDEV(Card_Component, {\n          className: 'anime-card',\n          title: anime.title,\n          description: anime.synopsis,\n          image: anime.images.jpg.large_image_url\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }, this))\n      }, \"D-ID\" + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"47E5VXQsk7LcjdWUo2qk3uOf+Do=\", false, function () {\n  return [useLocation];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","Card_Component","MY_Navbar2","useLocation","ItemPerPage","Search","query_y","location","Query","setQuery","page","setPage","animeList","setAnimeList","totalPages","setTotalPages","Totalitems","setTotalItems","state","search","slice","fetchAnime","query","response","fetch","data","json","pagination","last_visible_page","items","count","console","log","map","item","index","anime","title","synopsis","images","jpg","large_image_url"],"sources":["/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport Card_Component from '../components/card';\nimport MY_Navbar2 from '../components/Navbar_2';\n\nimport { useLocation } from 'react-router-dom';\nconst ItemPerPage = 5;\n\nconst Search = ({ query_y }) => {\n    const location = useLocation();\n    const [Query, setQuery] = useState(query_y);\n    const [page, setPage] = useState(1);\n    const [animeList, setAnimeList] = useState([]);\n    const [totalPages, setTotalPages] = useState(1);\n    const [Totalitems, setTotalItems] = useState(1);\n\n    if (location.state == true) {\n        setQuery(location.search.slice(0, 7))\n    }\n\n    const fetchAnime = async (query, page) => {\n        const response = await fetch(`https://api.jikan.moe/v4/anime?q=\"${query}\"&page=${page}&order_by=title&sort=asc`);\n        const data = await response.json();\n        const totalPages = data.pagination.last_visible_page;\n        const Totalitems = data.pagination.items.count;\n        console.log(data.data);\n        setAnimeList(data.data);\n        setTotalPages(totalPages);\n        setTotalItems(Totalitems);\n        console.log(`TOTAL PAGE: ${totalPages} & ITems: ${Totalitems}`);\n    };\n\n    useEffect(() => {\n        fetchAnime(Query, page);\n    }, []);\n    return (\n        <div className='main'>\n            <MY_Navbar2/>\n            <div onScroll={() => {\n                if (page < totalPages) {\n                    setPage(page + 1);\n                }\n            }}>\n                {animeList.slice(0, page * ItemPerPage).map((item, index) => (\n                    <div className='container' key={\"D-ID\" + index}>\n                        {/* <Recom/> */}\n\n                        {\n                            animeList?.map((anime, index) => (\n                                <Card_Component className={'anime-card'} title={anime.title} description={anime.synopsis} image={anime.images.jpg.large_image_url} key={index} />\n                            )\n                            )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n\n}\nexport default Search;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}