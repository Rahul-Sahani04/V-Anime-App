{"ast":null,"code":"var _jsxFileName = \"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/WatchAnime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport ThemeToggleButton from '../components/toggleTheme';\nimport './WatchAnime.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemPerPage = 25;\nfunction Watch() {\n  _s();\n  const [Query, setQuery] = useState(\"Naruto\");\n  const [animeList, setAnimeList] = useState({});\n  const [WatchUrl, setWatchUrl] = useState(\"\");\n  const [TotalEP, setTotalEP] = useState(1);\n  const Ep_no = window.location.pathname.split('/')[2];\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const handleThemeToggle = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  const fetchEpisodes = async query => {\n    const response = await fetch(`https://gogoanime.consumet.stream/anime-details/${query}`);\n    const data = await response.json();\n    const animeList = data;\n    setAnimeList(animeList);\n    const TotalEP = await animeList.totalEpisodes;\n    setTotalEP(TotalEP);\n    console.log(animeList);\n    console.log(\"TITLE: \" + animeList.animeTitle);\n    console.log(\"Total Ep: \" + TotalEP);\n    console.log(\"Episode : \" + animeList.episodesList[0].episodeId);\n    setDataLoaded(true);\n  };\n  const fetchAnime = async Epi_No => {\n    const response = await fetch(`https://gogoanime.consumet.stream/vidcdn/watch/${Epi_No}`);\n    const data = await response.json();\n    const animeList = data;\n    setAnimeList(animeList);\n    const TotalEP = await animeList.totalEpisodes;\n    setTotalEP(TotalEP);\n    console.log(animeList);\n    setDataLoaded(true);\n  };\n  useEffect(() => {\n    if (Ep_no) {\n      fetchAnime(Ep_no);\n    }\n    fetchEpisodes(Query);\n  }, []);\n  if (!dataLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", animeList.animeTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: animeList.episodesList.slice(0).reverse().map((episode, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"episode\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: `/watch/${episode.episodeId}`,\n            children: episode.episodeId.split(\"-\")[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Watch, \"+pQ86iETtpIj9V4cxIM8oQAqMEc=\");\n_c = Watch;\nexport default Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","useState","useEffect","MY_Navbar2","ThemeToggleButton","Link","ItemPerPage","Watch","Query","setQuery","animeList","setAnimeList","WatchUrl","setWatchUrl","TotalEP","setTotalEP","Ep_no","window","location","pathname","split","isDarkMode","setIsDarkMode","dataLoaded","setDataLoaded","handleThemeToggle","fetchEpisodes","query","response","fetch","data","json","totalEpisodes","console","log","animeTitle","episodesList","episodeId","fetchAnime","Epi_No","slice","reverse","map","episode","index"],"sources":["/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/WatchAnime.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport ThemeToggleButton from '../components/toggleTheme';\nimport './WatchAnime.css';\nimport { Link } from 'react-router-dom';\n\nconst ItemPerPage = 25;\n\nfunction Watch() {\n    const [Query, setQuery] = useState(\"Naruto\");\n    const [animeList, setAnimeList] = useState({});\n    const [WatchUrl, setWatchUrl] = useState(\"\");\n    \n    const [TotalEP, setTotalEP] = useState(1);\n    const Ep_no = window.location.pathname.split('/')[2];\n\n    const [isDarkMode, setIsDarkMode] = useState(false);\n    const [dataLoaded, setDataLoaded] = useState(false);\n\n    const handleThemeToggle = () => {\n        setIsDarkMode(!isDarkMode);\n    };\n\n    const fetchEpisodes = async (query) => {\n        const response = await fetch(`https://gogoanime.consumet.stream/anime-details/${query}`)\n        const data = await response.json();\n        const animeList = data;\n        setAnimeList(animeList);\n        const TotalEP = await animeList.totalEpisodes;\n        setTotalEP(TotalEP);\n        console.log(animeList);\n        console.log(\"TITLE: \" + animeList.animeTitle);\n        console.log(\"Total Ep: \" + TotalEP);\n        console.log(\"Episode : \" + animeList.episodesList[0].episodeId);\n        setDataLoaded(true);\n    };\n    const fetchAnime = async (Epi_No) => {\n        const response = await fetch(`https://gogoanime.consumet.stream/vidcdn/watch/${Epi_No}`)\n        const data = await response.json();\n        const animeList = data;\n        setAnimeList(animeList);\n        const TotalEP = await animeList.totalEpisodes;\n        setTotalEP(TotalEP);\n        console.log(animeList);\n\n        setDataLoaded(true);\n    };\n\n    useEffect(() => {\n        if (Ep_no) {\n            fetchAnime(Ep_no);\n        }\n        fetchEpisodes(Query);\n    }, []);\n\n    if (!dataLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className={`app`}>\n                <h1> {animeList.animeTitle}</h1>\n                <div className='content' >\n                    {animeList.episodesList.slice(0).reverse().map((episode, index) => (\n                        <div className='episode' key={index} >\n                            <Link className='link' to={`/watch/${episode.episodeId}`} >\n                                {episode.episodeId.split(\"-\")[2]}\n                            </Link>\n                        </div>\n                    ))}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Watch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}