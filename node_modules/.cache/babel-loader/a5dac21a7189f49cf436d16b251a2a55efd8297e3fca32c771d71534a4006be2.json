{"ast":null,"code":"var _jsxFileName = \"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport Card from '../components/card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    query_y\n  } = _ref;\n  const [Query, setQuery] = useState(query_y);\n  const [Page, setPage] = useState(1);\n  const [animeList, setAnimeList] = useState([]);\n  const fetchAnime = async (query, page) => {\n    const response = await fetch(`https://api.jikan.moe/v4/anime?q=\"${query}\"&page=${page}&order_by=title&sort=asc`);\n    const data = await response.json();\n    console.log(data.data);\n    setAnimeList(data.data.slice(0, 15));\n  };\n  useEffect(() => {\n    fetchAnime(Query, 1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: animeList === null || animeList === void 0 ? void 0 : animeList.map((anime, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: 'anime-card',\n      title: anime.title,\n      description: anime.synopsis,\n      image: anime.images.jpg.large_image_url\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"6JXGz8MInu04Yu+Gfi34UdMUF80=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","Card","Search","query_y","Query","setQuery","Page","setPage","animeList","setAnimeList","fetchAnime","query","page","response","fetch","data","json","console","log","slice","map","anime","index","title","synopsis","images","jpg","large_image_url"],"sources":["/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport Card from '../components/card';\n\n\nconst Search = ({ query_y }) => {\n    const [Query, setQuery] = useState(query_y);\n    const [Page, setPage] = useState(1);\n    const [animeList, setAnimeList] = useState([]);\n\n\n    const fetchAnime = async (query, page) => {\n        const response = await fetch(`https://api.jikan.moe/v4/anime?q=\"${query}\"&page=${page}&order_by=title&sort=asc`);\n        const data = await response.json();\n        console.log(data.data);\n        setAnimeList(data.data.slice(0, 15));\n    };\n\n    useEffect(() => {\n        fetchAnime(Query, 1);\n      }, []);\n    return (\n        <div className=\"container\">\n            {\n                animeList?.map((anime, index) => (\n                    <Card className={'anime-card'} title={anime.title} description={anime.synopsis} image={anime.images.jpg.large_image_url} key={index} />\n                )\n                )}\n        </div>\n    )\n}\nexport default Search;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,oBAAoB;AAAC;AAGtC,MAAMC,MAAM,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACI,OAAO,CAAC;EAC3C,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAG9C,MAAMW,UAAU,GAAG,OAAOC,KAAK,EAAEC,IAAI,KAAK;IACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCH,KAAM,UAASC,IAAK,0BAAyB,CAAC;IAChH,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACA,IAAI,CAAC;IACtBN,YAAY,CAACM,IAAI,CAACA,IAAI,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EACxC,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZU,UAAU,CAACN,KAAK,EAAE,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EACR,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,UAElBI,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEY,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACxB,QAAC,IAAI;MAAC,SAAS,EAAE,YAAa;MAAC,KAAK,EAAED,KAAK,CAACE,KAAM;MAAC,WAAW,EAAEF,KAAK,CAACG,QAAS;MAAC,KAAK,EAAEH,KAAK,CAACI,MAAM,CAACC,GAAG,CAACC;IAAgB,GAAML,KAAK;MAAA;MAAA;MAAA;IAAA,QACtI;EACA;IAAA;IAAA;IAAA;EAAA,QACH;AAEd,CAAC;AAAA,GAzBKpB,MAAM;AAAA,KAANA,MAAM;AA0BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}