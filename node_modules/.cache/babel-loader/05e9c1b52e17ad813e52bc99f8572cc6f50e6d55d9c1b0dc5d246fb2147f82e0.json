{"ast":null,"code":"var _jsxFileName = \"/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/WatchAnime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport Card_Component from '../components/card';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport ThemeToggleButton from '../components/toggleTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemPerPage = 25;\nfunction Watch() {\n  _s();\n  const [Query, setQuery] = useState(\"Naruto\");\n  const [animeList, setAnimeList] = useState([]);\n  const [TotalEP, setTotalEP] = useState(1);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const handleThemeToggle = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  useEffect(() => {\n    async function fetchAnime(query) {\n      const response = await fetch(`https://gogoanime.consumet.stream/anime-details/${query}`);\n      const animeList = await response.json();\n      const TotalEP = animeList.totalEpisodes;\n      console.log(animeList);\n      console.log(\"TITLE: \" + animeList.animeTitle);\n      console.log(\"Total Ep: \" + TotalEP);\n      console.log(\"Episode : \" + animeList.episodesList[0].episodeId);\n      setDataLoaded(true);\n      animeList === null || animeList === void 0 ? void 0 : animeList.episodesList.map((anime, index) => console.log(anime.episodeId));\n    }\n    ;\n    fetchAnime(Query);\n    console.log(\"Array = \");\n    console.log(animeList);\n  });\n  if (!dataLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: animeList.animeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ep-list\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: animeList === null || animeList === void 0 ? void 0 : animeList.episodesList.map((anime, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: anime.episodeId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Watch, \"iW2Xq7xBr0C//hWc/0RPoHC0lfg=\");\n_c = Watch;\nexport default Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","useState","useEffect","Card_Component","MY_Navbar2","ThemeToggleButton","ItemPerPage","Watch","Query","setQuery","animeList","setAnimeList","TotalEP","setTotalEP","isDarkMode","setIsDarkMode","dataLoaded","setDataLoaded","handleThemeToggle","fetchAnime","query","response","fetch","json","totalEpisodes","console","log","animeTitle","episodesList","episodeId","map","anime","index"],"sources":["/Users/rsahani/Documents/RAHUL/PROJECT V-Anime/v-anime1/src/pages/WatchAnime.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../main.css';\nimport Card_Component from '../components/card';\nimport MY_Navbar2 from '../components/Navbar_2';\nimport ThemeToggleButton from '../components/toggleTheme';\nconst ItemPerPage = 25;\n\nfunction Watch() {\n    const [Query, setQuery] = useState(\"Naruto\");\n    const [animeList, setAnimeList] = useState([]);\n    const [TotalEP, setTotalEP] = useState(1);\n\n    const [isDarkMode, setIsDarkMode] = useState(false);\n    const [dataLoaded, setDataLoaded] = useState(false);\n\n    const handleThemeToggle = () => {\n        setIsDarkMode(!isDarkMode);\n    };\n\n\n    \n    useEffect(() => {\n        async function fetchAnime(query) {\n            const response = await fetch(`https://gogoanime.consumet.stream/anime-details/${query}`)\n            const animeList = await response.json();\n            const TotalEP = animeList.totalEpisodes;\n            console.log(animeList);\n            console.log(\"TITLE: \" + animeList.animeTitle);\n            console.log(\"Total Ep: \" + TotalEP);\n            console.log(\"Episode : \" + animeList.episodesList[0].episodeId);\n            setDataLoaded(true);\n            animeList?.episodesList.map((anime, index) => (\n                console.log(anime.episodeId)\n            ))\n        };\n        fetchAnime(Query);\n        console.log(\"Array = \");\n        console.log(animeList);\n\n});\n\n    if (!dataLoaded) {\n        return <div>Loading...</div>;\n      }\n    else{\n\n        return (\n            <div className={`app`}>\n            <h1>{animeList.animeTitle}</h1>\n            <div className={\"content\"}>\n                <div className='ep-list'>\n                    <ul>\n                    {\n                        animeList?.episodesList.map((anime, index) => (\n                            <li>{anime.episodeId}</li>\n                            )\n                            )}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n    \n}\n}\nexport default Watch;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,OAAOC,cAAc,MAAM,oBAAoB;AAC/C,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,iBAAiB,MAAM,2BAA2B;AAAC;AAC1D,MAAMC,WAAW,GAAG,EAAE;AAEtB,SAASC,KAAK,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMiB,iBAAiB,GAAG,MAAM;IAC5BH,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAIDZ,SAAS,CAAC,MAAM;IACZ,eAAeiB,UAAU,CAACC,KAAK,EAAE;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mDAAkDF,KAAM,EAAC,CAAC;MACxF,MAAMV,SAAS,GAAG,MAAMW,QAAQ,CAACE,IAAI,EAAE;MACvC,MAAMX,OAAO,GAAGF,SAAS,CAACc,aAAa;MACvCC,OAAO,CAACC,GAAG,CAAChB,SAAS,CAAC;MACtBe,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGhB,SAAS,CAACiB,UAAU,CAAC;MAC7CF,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGd,OAAO,CAAC;MACnCa,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGhB,SAAS,CAACkB,YAAY,CAAC,CAAC,CAAC,CAACC,SAAS,CAAC;MAC/DZ,aAAa,CAAC,IAAI,CAAC;MACnBP,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEkB,YAAY,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KACrCP,OAAO,CAACC,GAAG,CAACK,KAAK,CAACF,SAAS,CAC9B,CAAC;IACN;IAAC;IACDV,UAAU,CAACX,KAAK,CAAC;IACjBiB,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBD,OAAO,CAACC,GAAG,CAAChB,SAAS,CAAC;EAE9B,CAAC,CAAC;EAEE,IAAI,CAACM,UAAU,EAAE;IACb,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAC9B,CAAC,MACC;IAEA,oBACI;MAAK,SAAS,EAAG,KAAK;MAAA,wBACtB;QAAA,UAAKN,SAAS,CAACiB;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM,eAC/B;QAAK,SAAS,EAAE,SAAU;QAAA,uBACtB;UAAK,SAAS,EAAC,SAAS;UAAA,uBACpB;YAAA,UAEIjB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEkB,YAAY,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrC;cAAA,UAAKD,KAAK,CAACF;YAAS;cAAA;cAAA;cAAA;YAAA,QACnB;UACA;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA;MACH;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAGd;AACA;AAAC,GAzDQtB,KAAK;AAAA,KAALA,KAAK;AA0Dd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}